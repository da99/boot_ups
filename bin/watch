#!/usr/bin/env bash
# -*- bash -*-
#
#  For more info on inotifywait:
#    http://manpages.ubuntu.com/manpages/hardy/man1/inotifywait.1.html
#
#
#  Use this file as:
#    boot_up/bin/watch my_script
#
#  The script will send the output
#  of inotifywaut to `my_script`.
#
#  Files/dirs with .git in the name are ignored.
#  Example:
#     .git
#     ./.git
#     ./dir/file.git/

ignore="$IGNORE"
if [[ ! -z "$ignore" ]]
then
  ignore="--exclude $ignore"
fi

set -u -e -o pipefail
me=$0
dir="$(dirname $me)"
cmd="$@"

if [[ -z "$@" ]]
then
  echo "No command given. Exiting..." 1>&2
  exit 1
fi

temp="$(mktemp)"
$(dirname $0)/watch_run $temp "$@" &
run_id=$!

cleanup () {
  kill $run_id || true
  rm $temp
}

trap cleanup SIGINT SIGTERM

echo "---- Process: $run_id ----"

# === From an answer by "technosaurus":
#     http://stackoverflow.com/a/18295696/841803
inotifywait -q -m --exclude .git/ $ignore -r . | while read CHANGE
do

  op=$(echo "$CHANGE" | cut -d' ' -f 2)
  file=$(echo "$CHANGE" | cut -d' ' -f 3)

  if [[ ( ! "$op" =~ "NOWRITE" ) && ( "$op" =~ "CLOSE" || "$op" =~ "WRITE" )  && ! -z "$file" ]]
  then
    echo $CHANGE > $temp
  fi

done






